import random
import os

def load_words(language='russian'):
    if language == 'russian':
        filepath = 'words_rus.txt'
        default_words = ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–æ–º–ø—å—é—Ç–µ—Ä', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', '–∞–ª–≥–æ—Ä–∏—Ç–º', '—Ñ—É–Ω–∫—Ü–∏—è']
    else:  
        filepath = 'words_eng.txt'
        default_words = ['programming', 'computer', 'development', 'algorithm', 'function']
    
    try:
        with open(filepath, 'r', encoding='utf-8') as file:
            words = [line.strip().lower() for line in file if line.strip()]
        
        # –°–ª–æ–≤–∞ —Å –º–µ–Ω–µ–µ —á–µ–º 4 –±—É–∫–≤–∞–º–∏ –∏ –º–µ–Ω–µ–µ —á–µ–º 2 —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è
        words = [word for word in words if len(word) >= 4 and len(set(word)) >= 2]
        
        if not words:
            print(f"–í —Ñ–∞–π–ª–µ {filepath} –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.")
            return default_words
        
        return words
    except FileNotFoundError:
        print(f"–§–∞–π–ª {filepath} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤.")
        return default_words

def choose_language():
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è –∏–≥—Ä—ã:")
    print("1. –†—É—Å—Å–∫–∏–π")
    print("2. English")
    
    while True:
        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
        if choice == '1':
            return 'russian'
        elif choice == '2':
            return 'english'
        else:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –∏–ª–∏ 2 –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.")

def initialize_game(word_list):
    secret_word = random.choice(word_list)
    attempts_left = 7 
    display_word = ['_'] * len(secret_word)
    guessed_letters = set()
    wrong_letters = set()
    
    unique_letters = list(set(secret_word))
    if len(unique_letters) >= 3:
        revealed_letters = random.sample(unique_letters, 2)
    elif len(unique_letters) == 2:
        revealed_letters = random.sample(unique_letters, 1)
    
    for letter in revealed_letters:
        for i, char in enumerate(secret_word):
            if char == letter:
                display_word[i] = letter
        guessed_letters.add(letter)
    
    return {
        'secret_word': secret_word,
        'attempts_left': attempts_left,
        'display_word': display_word,
        'guessed_letters': guessed_letters,
        'wrong_letters': wrong_letters
    }

def display_hangman(attempts_left):
    stages = [
        # 0
        """
        ______
        |    |
        |    O
        |   /|\\
        |   / \\
        |
        """,
        # 1
        """
        ______
        |    |
        |    O
        |   /|\\
        |   /
        |
        """,
        # 2
        """
        ______
        |    |
        |    O
        |   /|\\
        |
        |
        """,
        # 3
        """
        ______
        |    |
        |    O
        |   /|
        |
        |
        """,
        # 4
        """
        ______
        |    |
        |    O
        |    |
        |
        |
        """,
        # 5
        """
        ______
        |    |
        |    O
        |
        |
        |
        """,
        # 6
        """
        ______
        |    |
        |
        |
        |
        |
        """,
        # 7
        """
        
        |
        |
        |
        |
        |
        """
    ]
    return stages[attempts_left]

def display_game_state(display_word, attempts_left, wrong_letters):
    print("\n" + "="*50)
    print(display_hangman(attempts_left))
    print(f"–°–ª–æ–≤–æ: {' '.join(display_word)}")
    print(f"–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {attempts_left}")
    if wrong_letters:
        print(f"–ù–µ–≤–µ—Ä–Ω—ã–µ –±—É–∫–≤—ã: {', '.join(sorted(wrong_letters))}")
    print("="*50)

def get_player_input(guessed_letters, secret_word_length):
    while True:
        try:
            user_input = input("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Ü–µ–ª–æ–µ —Å–ª–æ–≤–æ: ").strip().lower()
            
            if not user_input:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ!")
                continue
            
            if not user_input.isalpha():
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã!")
                continue
            
            # –ø–æ–ø—ã—Ç–∫–∞ —É–≥–∞–¥–∞—Ç—å —Ü–µ–ª–æ–µ —Å–ª–æ–≤–æ
            if len(user_input) == secret_word_length:
                return {'type': 'word', 'value': user_input}
            
            elif len(user_input) == 1:
                letter = user_input
                if letter in guessed_letters:
                    print(f"–í—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ –±—É–∫–≤—É '{letter}'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é!")
                    continue
                return {'type': 'letter', 'value': letter}
            
            else:
                print(f"–í–≤–µ–¥–∏—Ç–µ –ª–∏–±–æ –æ–¥–Ω—É –±—É–∫–≤—É, –ª–∏–±–æ —Å–ª–æ–≤–æ –∏–∑ {secret_word_length} –±—É–∫–≤!")
                print("(–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π)")
                continue
            
        except KeyboardInterrupt:
            print("\n–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return None

def update_display_word(secret_word, display_word, letter):
    updated = False
    for i, char in enumerate(secret_word):
        if char == letter:
            display_word[i] = letter
            updated = True
    return updated

def check_win(secret_word, display_word):
    return '_' not in display_word

def check_loss(attempts_left):
    return attempts_left <= 0

def play_again():
    while True:
        answer = input("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
        if answer in ['–¥–∞', '–¥', 'yes', 'y']:
            return True
        elif answer in ['–Ω–µ—Ç', '–Ω', 'no', 'n']:
            return False
        else:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.")

def run_game():
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–í–∏—Å–µ–ª–∏—Ü–∞'!")
    print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, –Ω–∞–∑—ã–≤–∞—è –±—É–∫–≤—ã –ø–æ –æ–¥–Ω–æ–π.")
    
    language = choose_language()
    
    word_list = load_words(language)
    
    if language == 'russian':
        print("–ò–≥—Ä–∞–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ!")
    else:
        print("Playing in English!")
    
    while True:
        game_data = initialize_game(word_list)
        secret_word = game_data['secret_word']
        attempts_left = game_data['attempts_left']
        display_word = game_data['display_word']
        guessed_letters = game_data['guessed_letters']
        wrong_letters = game_data['wrong_letters']
        
        print(f"\n–ù–æ–≤–∞—è –∏–≥—Ä–∞! –ó–∞–≥–∞–¥–∞–Ω–æ —Å–ª–æ–≤–æ –∏–∑ {len(secret_word)} –±—É–∫–≤.")
        print("–î–ª—è –æ–±–ª–µ–≥—á–µ–Ω–∏—è –∏–≥—Ä—ã —É–∂–µ —Ä–∞—Å–∫—Ä—ã—Ç—ã –¥–≤–µ (–∏–ª–∏ –æ–¥–Ω–∞) —Å–ª—É—á–∞–π–Ω—ã–µ –±—É–∫–≤—ã!")

        while True:
            display_game_state(display_word, attempts_left, wrong_letters)
            
            user_input = get_player_input(guessed_letters, len(secret_word))
            
            # –ø–æ–ø—ã—Ç–∫–∞ —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ
            if user_input['type'] == 'word':
                guessed_word = user_input['value']
                if guessed_word == secret_word:
                    display_word = list(secret_word)  
                    print(f"üéâ –ü–†–ï–í–û–°–•–û–î–ù–û! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ '{secret_word}' —Ü–µ–ª–∏–∫–æ–º!")
                else:
                    attempts_left -= 1
                    print(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –≠—Ç–æ –Ω–µ —Å–ª–æ–≤–æ '{guessed_word}'.")
            
            elif user_input['type'] == 'letter':
                letter = user_input['value']
                
                guessed_letters.add(letter)
                
                if update_display_word(secret_word, display_word, letter):
                    print(f"–û—Ç–ª–∏—á–Ω–æ! –ë—É–∫–≤–∞ '{letter}' –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ!")
                else:
                    wrong_letters.add(letter)
                    attempts_left -= 1
                    print(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±—É–∫–≤—ã '{letter}' –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ.")
            
            if check_win(secret_word, display_word):
                display_game_state(display_word, attempts_left, wrong_letters)
                print("üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ!")
                print(f"–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {secret_word}")
                break
            elif check_loss(attempts_left):
                display_game_state(display_word, attempts_left, wrong_letters)
                print("üíÄ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.")
                print(f"–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: {secret_word}")
                break
        
        if not play_again():
            break
    
    print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

def main():
    try:
        run_game()
    except KeyboardInterrupt:
        print("\n\n–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 